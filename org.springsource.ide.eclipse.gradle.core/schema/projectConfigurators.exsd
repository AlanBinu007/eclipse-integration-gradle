<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.springsource.ide.eclipse.gradle.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.springsource.ide.eclipse.gradle.core" id="projectConfigurators" name="Project Configurators"/>
      </appinfo>
      <documentation>
         Allows clietns to contribute project configurators. These objects provide clients with ability to configure a project based on the information inferred from the Gradle model of the project. A project configurator may add a nature or dependency if it is missing. Gradle project import and refresh are typical scenarios when project configurators are invoked.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            One or more project configurators contributions can be defined
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="configurator" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="configurator">
      <annotation>
         <documentation>
            Project configurator element required to provide project configurator class and a unique identifier
         </documentation>
      </annotation>
      <complexType>
         <sequence>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Project configurator unique id
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Project configurator class
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.springsource.ide.eclipse.gradle.core.IProjectConfigurator"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  Project configurator name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="after" type="string">
            <annotation>
               <documentation>
                  Separated by commas unique identifires of projects configurators after whcih this project configurator will be configuring a project.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="before" type="string">
            <annotation>
               <documentation>
                  Separated by commas unique identifires of projects configurators before whcih this project configurator will be configuring a project.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         3.5.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The following is an example of a Project Configuration extension definition from (from Spring Tool Suite code base):
&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.springsource.ide.eclipse.gradle.core.projectConfigurators&quot;&gt;
 &lt;configurator
  class=&quot;org.springframework.ide.eclipse.wizard.gettingstarted.importing.SpringProjectConfigurator&quot;
  id=&quot;org.springframework.ide.eclipse.springproject&quot;
  name=&quot;Spring&quot;&gt;
 &lt;/configurator&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         &lt;p&gt;Unique identifiers must be provided for each project configurator contribution.&lt;/p&gt;
&lt;p&gt;Project contributor class must implement &lt;b&gt;&lt;i&gt;org.springsource.ide.eclipse.gradle.core.api.IProjectConfigurator&lt;/i&gt;&lt;/b&gt; interface.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         &lt;p&gt;The com.springframework.ide.eclipse.wizard plug-in provides a complete implementation of the &lt;samp&gt;project configurator&lt;/samp&gt; contribution in &lt;i&gt;org.springframework.ide.eclipse.wizard.gettingstarted.importings&lt;/i&gt; package.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2014 Pivotal Software Inc. All rights reserved.
      </documentation>
   </annotation>

</schema>
